// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id            String    @id @default(uuid()) @map("_id")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  email         String    @unique
  firstName     String
  lastName      String
  username      String?   @unique
  disabled      Boolean   @default(false)
  admin         Boolean   @default(false)
  scans         Scan[]
  slots         Slot[]
  emailVerified DateTime?
}

model Staff {
  id          String     @id @default(uuid()) @map("_id")
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  name        String
  description String
  role        String
  image       String
  questions   Question[]
  QrCode      QrCode[]
}

model Question {
  id        String   @id @default(uuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  question  String
  answer    String
  staff     Staff    @relation(fields: [staffId], references: [id])
  staffId   String
}

model QrCode {
  id        String   @id @default(uuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  code      String   @unique
  staff     Staff    @relation(fields: [staffId], references: [id])
  staffId   String
  disabled  Boolean  @default(false)
  scans     Scan[]
}

model Scan {
  id        String   @id @default(uuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  qrCode    QrCode   @relation(fields: [qrCodeId], references: [id])
  qrCodeId  String
}

model Slot {
  id        String   @id @default(uuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  hour      String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model VerificationToken {
  id         String   @id @default(uuid()) @map("_id")
  identifier String   @unique
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}
